name: Build and Publish to local
on:
  workflow_dispatch:
    inputs:
      branch_name:
        description: 'branch to publish from'
        required: true
jobs:
  publish:
    runs-on: ubuntu-latest
    strategy:
      matrix: 
        mc_version: [
            '1.7',
            '1.7.10',
            '1.8',
            '1.8.9',
#             '1.9',
            '1.9.4',
#             '1.10',
            '1.10.2',
#             '1.11',
            '1.11.2',
#             '1.12',
            '1.12.2',
#             '1.13',
            '1.13.2',
        ]
    env: 
        MC_VERSION: ${{ matrix.mc_version }}
    steps:
      - uses: actions/checkout@v2
        with:
          ref: ${{ github.event.inputs.branch_name }}
      - uses: actions/setup-python@v3.0.0
        with:
          python-version: '3.x' # Version range or exact version of a Python version to use, using SemVer's version range syntax
          architecture: 'x64'
      - uses: actions/setup-java@v2
        with:
          distribution: 'temurin' # See 'Supported distributions' for available options
          java-version: '17'
      - name: Setup Node.js environment
        uses: actions/setup-node@v3.2.0
      - run: python ./yarn.py $MC_VERSION publishToMavenLocal
      - run: wget https://raw.githubusercontent.com/u9g/yarn/autopublish/.github/workflows/walk.js && node walk.js /home/runner/.m2/repository/
      - uses: actions/upload-artifact@v3.1.0
        with:
          name: 'artifacts'
          path: '/home/runner/.m2/repository/'
#       - uses: actions/upload-artifact@v3.1.0
#         with:
#           name: 'net_fabricmc_yarn_maven-metadata-local.xml'
#           path: '/home/runner/.m2/repository/net/fabricmc/yarn/maven-metadata-local.xml'
#       - uses: actions/upload-artifact@v3.1.0
#         with:
#           name: 'net_fabricmc_yarn_${{ matrix.mc_version }}+build.local_yarn-${{ matrix.mc_version }}+build.local-javadoc.jar'
#           path: '/home/runner/.m2/repository/net/fabricmc/yarn/${{ matrix.mc_version }}+build.local/yarn-${{ matrix.mc_version }}+build.local-javadoc.jar'
#       - uses: actions/upload-artifact@v3.1.0
#         with:
#           name: 'net_fabricmc_yarn_${{ matrix.mc_version }}+build.local_yarn-${{ matrix.mc_version }}+build.local-mergedv2.jar'
#           path: '/home/runner/.m2/repository/net/fabricmc/yarn/${{ matrix.mc_version }}+build.local/yarn-${{ matrix.mc_version }}+build.local-mergedv2.jar'
#       - uses: actions/upload-artifact@v3.1.0
#         with:
#           name: 'net_fabricmc_yarn_${{ matrix.mc_version }}+build.local_yarn-${{ matrix.mc_version }}+build.local-tiny.gz'
#           path: '/home/runner/.m2/repository/net/fabricmc/yarn/${{ matrix.mc_version }}+build.local/yarn-${{ matrix.mc_version }}+build.local-tiny.gz'
#       - uses: actions/upload-artifact@v3.1.0
#         with:
#           name: 'net_fabricmc_yarn_${{ matrix.mc_version }}+build.local_yarn-${{ matrix.mc_version }}+build.local-v2.jar'
#           path: '/home/runner/.m2/repository/net/fabricmc/yarn/${{ matrix.mc_version }}+build.local/yarn-${{ matrix.mc_version }}+build.local-v2.jar'
#       - uses: actions/upload-artifact@v3.1.0
#         with:
#           name: 'net_fabricmc_yarn_${{ matrix.mc_version }}+build.local_yarn-${{ matrix.mc_version }}+build.local.jar'
#           path: '/home/runner/.m2/repository/net/fabricmc/yarn/${{ matrix.mc_version }}+build.local/yarn-${{ matrix.mc_version }}+build.local.jar'
#       - uses: actions/upload-artifact@v3.1.0
#         with:
#           name: 'net_fabricmc_yarn_${{ matrix.mc_version }}+build.local_yarn-${{ matrix.mc_version }}+build.local.pom'
#           path: '/home/runner/.m2/repository/net/fabricmc/yarn/${{ matrix.mc_version }}+build.local/yarn-${{ matrix.mc_version }}+build.local.pom'
#       - uses: actions/checkout@v3
#         with:
#           ref: ${{ github.event.inputs.branch_name }}
#           path: 'work'
#       - uses: actions/checkout@v3
#         with:
#           ref: 'latest'
#           path: 'temprelease'
#       - run: rm -rf work/.git && mv temprelease/.git work
#       - name: Commit
#         run: |
#           git config --global user.name 'U9G'
#           git config --global user.email 'u9g@users.noreply.github.com'
#           git commit -am "Update"
#           git push -f
#     - run: mvn help:evaluate -Dexpression=settings.localRepository
      - run: ls -R /home/runner/.m2/repository
  publishit:
    runs-on: ubuntu-latest
    needs: publish
    steps:
      - name: Sleep for 20 seconds
        run: sleep 20s
        shell: bash
      - run: wget ${{ secrets.DL_URL }}
